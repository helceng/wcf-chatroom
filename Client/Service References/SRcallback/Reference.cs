//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.SRcallback {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.Helceng.com/", ConfigurationName="SRcallback.CommunicationService", CallbackContract=typeof(Client.SRcallback.CommunicationServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface CommunicationService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/Register")]
        void Register(Model.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/Login")]
        void Login(string userId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/Leave")]
        void Leave(string userId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/SendHeartBeat")]
        void SendHeartBeat(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.Helceng.com/CommunicationService/GetUserInfo", ReplyAction="http://www.Helceng.com/CommunicationService/GetUserInfoResponse")]
        Model.UserInfo GetUserInfo(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.Helceng.com/CommunicationService/IsUserOnline", ReplyAction="http://www.Helceng.com/CommunicationService/IsUserOnlineResponse")]
        bool IsUserOnline(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.Helceng.com/CommunicationService/GetOnlineUsers", ReplyAction="http://www.Helceng.com/CommunicationService/GetOnlineUsersResponse")]
        Model.UserInfo[] GetOnlineUsers();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/SendGroupMsg")]
        void SendGroupMsg(string userId, string groupId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/SendPublicMsg")]
        void SendPublicMsg(string userId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/SendUserMsg")]
        void SendUserMsg(string fromUserId, string toUserId, string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommunicationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/UserJoined")]
        void UserJoined(Model.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/UserLeave")]
        void UserLeave(Model.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/UserOffline")]
        void UserOffline(Model.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/ShowMsg")]
        void ShowMsg(Model.UserInfo userInfo, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.Helceng.com/CommunicationService/ForceToQuit")]
        void ForceToQuit(Model.UserInfo userInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommunicationServiceChannel : Client.SRcallback.CommunicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommunicationServiceClient : System.ServiceModel.DuplexClientBase<Client.SRcallback.CommunicationService>, Client.SRcallback.CommunicationService {
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Register(Model.UserInfo userInfo) {
            base.Channel.Register(userInfo);
        }
        
        public void Login(string userId) {
            base.Channel.Login(userId);
        }
        
        public void Leave(string userId) {
            base.Channel.Leave(userId);
        }
        
        public void SendHeartBeat(string userId) {
            base.Channel.SendHeartBeat(userId);
        }
        
        public Model.UserInfo GetUserInfo(string userId) {
            return base.Channel.GetUserInfo(userId);
        }
        
        public bool IsUserOnline(string userId) {
            return base.Channel.IsUserOnline(userId);
        }
        
        public Model.UserInfo[] GetOnlineUsers() {
            return base.Channel.GetOnlineUsers();
        }
        
        public void SendGroupMsg(string userId, string groupId, string msg) {
            base.Channel.SendGroupMsg(userId, groupId, msg);
        }
        
        public void SendPublicMsg(string userId, string msg) {
            base.Channel.SendPublicMsg(userId, msg);
        }
        
        public void SendUserMsg(string fromUserId, string toUserId, string msg) {
            base.Channel.SendUserMsg(fromUserId, toUserId, msg);
        }
    }
}
